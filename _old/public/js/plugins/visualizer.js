/**
 * Copyright (c) 2020 The Nuevodebel Team. All rights reserved. Version 1.0
 */
!(function (e, t) { typeof define === `function` && define.amd ? define([], t.bind(this, e, e.videojs)) : typeof module !== `undefined` && module.exports ? module.exports = t(e, e.videojs) : t(e, e.videojs); }(window, (e, t) => { "use strict"; e.videojs_visualizer = { version: `0.2` }; t.registerPlugin(`visualizer`, function (o) { const i = this; const n = i.el(); let r = i.$(`.vjs-tech`); const a = (t.mergeOptions || t.util.mergeOptions)({ video: !1, color1: `#ffcc00`, color2: `#ff0000`, capsColor: `#fff`, caps: !1, bottom: 0, height: 50 }, o || {}); a.f_play = !1, String.prototype.dg13 = function () { return this.replace(/[a-zA-Z]/g, (e) => { return String.fromCharCode((e <= `Z` ? 90 : 122) >= (e = e.charCodeAt(0) + 13) ? e : e - 26); }); }; if ((e.AudioContext = e.AudioContext || e.webkitAudioContext, !!e.AudioContext) == 1 && !t.browser.IS_IOS && !(`ontouchstart` in e || navigator.msMaxTouchPoints || navigator.maxTouchPoints)) { let c; let s; let l; let d; let f; let h; let u; let p; let v = !0; const g = new WeakMap(); let m = `50`; let y = `0`; return parseInt(a.height) > 0 && parseInt(a.height) <= 100 && (m = parseInt(a.height)), parseInt(a.bottom) > 0 && (y = `${parseInt(a.bottom)}%`), parseInt(a.width) <= 100 && parseInt(a.width) > 10 && parseInt(a.width), (function (e) { const t = document.head || document.getElementsByTagName(`head`)[0]; const o = document.createElement(`style`); o.type = `text/css`, o.styleSheet ? o.styleSheet.cssText = e : o.appendChild(document.createTextNode(e)), t.appendChild(o); }(`.vjs-visualizer{position:absolute;padding:0 10px;bottom:${y};width:100%;height:${m}%;pointer-events:none;}`)), (l = document.createElement(`canvas`)).className = `vjs-visualizer`, l.id = `visualizer`, n.insertBefore(l, i.controlBar.el_), i.ready(() => { c = !1, i.on(`loadeddata`, () => { const e = i.currentType(); c = e.indexOf(`audio`) > -1, a.f_play = !1, a.video && (c = !0); }), i.on(`playing`, () => { if (!a.f_play) { void 0 !== i.currentSource().av && (v = !1); const t = n.querySelector(`.vjs-background-bar`); if (a.f_play = !0, c && v && t) { function o (e, t) { e = e.replace(`#`, ``); const o = parseInt(e.length == 3 ? e.slice(0, 1).repeat(2) : e.slice(0, 2), 16); const i = parseInt(e.length == 3 ? e.slice(1, 2).repeat(2) : e.slice(2, 4), 16); const n = parseInt(e.length == 3 ? e.slice(2, 3).repeat(2) : e.slice(4, 6), 16); return t ? `rgba(${o}, ${i}, ${n}, ${t})` : `rgb(${o}, ${i}, ${n})`; }!(function () { r = i.$(`.vjs-tech`); try { s == null && (s = new AudioContext()), g.has(r) ? u = g.get(r) : (u = s.createMediaElementSource(r), g.set(r, u)), p = s.createAnalyser(), l.width = l.offsetWidth, l.height = n.offsetHeight, h = l.getContext(`2d`), u.connect(p), p.connect(s.destination); } catch (e) {} }()), a.color1.indexOf(`#`) < 0 && (a.color1 = `#${a.color1}`), a.color2.indexOf(`#`) < 0 && (a.color2 = `#${a.color2}`); let m = `#ffcc00`; let y = `#ff0000`; let w = `#fff`; const C = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i; C.test(a.capsColor) && (w = a.capsColor), C.test(a.color1) && (m = a.color1), C.test(a.color2) && (y = a.color2); const x = o(m); const A = o(y); const S = o(m, 0.2); const b = new Array(); !(function t () { if (c) { if ((r = i.$(`.vjs-tech`)).nodeName == `VIDEO`) { const o = n.querySelector(`.vjs-background-bar`); o && (o.style.height = `10%`); }p.fftSize = 256, d = p.frequencyBinCount, l.width = n.offsetWidth - 20; let s = l.width / d * 1.2; s < 6 && (s = 6); let u; let v = 1; l.width < 500 && (v = 2), e.RequestAnimationFrame = e.requestAnimationFrame(t) || e.msRequestAnimationFrame(t) || e.mozRequestAnimationFrame(t) || e.webkitRequestAnimationFrame(t); let g = 0; f = new Uint8Array(d), p.getByteFrequencyData(f), h.clearRect(0, 0, l.width, l.height); for (let m = 0; m < d; m += v) if (m = parseInt(m), u = f[m], g + s < l.width) { const y = h.createLinearGradient(0, 0, 0, 0.5 * l.height); y.addColorStop(1, x), y.addColorStop(0.5, A), y.addColorStop(0, A); const C = l.height / 1.5 - u; const I = l.height / 1.5; h.fillStyle = y, h.fillRect(g, C, s, u), a.caps && (b[g] ? (h.fillStyle = w, C < b[g] ? (b[g] = C, C != I && h.fillRect(g, C - 6, s, 3)) : (b[g] = b[g] + 1, b[g] < I && h.fillRect(g, b[g] - 6, s, 3))) : b[g] = C), h.fillStyle = S, h.fillRect(g, l.height / 1.5, s, u / 2), g += s + 4; } } else try { h.clearRect(0, 0, l.width, l.height); } catch (e) {} }()); } } }); }), this; } }); }));
