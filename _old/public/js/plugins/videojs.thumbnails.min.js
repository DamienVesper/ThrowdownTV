!(function () { const t = { width: 160, height: 90, basePath: `` }; var e = function () { let t, s, r, i, a; for (r in s = (t = Array.prototype.slice.call(arguments)).shift() || {}, t) for (a in i = t[r])i.hasOwnProperty(a) && (typeof i[a] === `object` ? s[a] = e(s[a], i[a]) : s[a] = i[a]); return s; }; const s = function (e) { let s, r, i; if ((r = e.indexOf(`#`)) === -1) return { src: e, w: 0, h: 0, x: 0, y: 0 }; if (s = e.substring(0, r), (i = e.substring(r + 1)).substring(0, 5) !== `xywh=`) return { src: t.basePath + s, w: 0, h: 0, x: 0, y: 0 }; const a = i.substring(5).split(`,`); return { src: t.basePath + s, w: parseInt(a[2]), h: parseInt(a[3]), x: parseInt(a[0]), y: parseInt(a[1]) }; }; videojs.registerPlugin(`thumbnails`, function (r) { let i, a, o, l, n, d, h, v; t.basePath = ``, r && (r.basePath && (t.basePath = r.basePath), r.width && r.height && (t.width = r.width, t.height = r.height)), a = e({}, t, r), l = this, videojs.browser.TOUCH_ENABLED || l.on(`medialoaded`, function (t) { const e = l.textTracks().length; if (e !== 0) { let r = !1; for (u = 0; u < e;) { if (l.textTracks()[u].kind === `metadata` && l.textTracks()[u].src) { r = !0; var c = (v = l.textTracks()[u]) && v.cues.length; v.mode = `hidden`; break; }u++; } if (r == 1) if ((c = v && v.cues.length) < 1)videojs.dom.addClass(`div`, `vjs-hidden`); else { for (var u = 0; u < c;) { const p = v.cues[u]; ctt = s(p.text), u++; } const m = l.controlBar.progressControl; const y = l.el_.querySelector(`.vjs-thumb-tooltip`); y !== null && y.parentNode.removeChild(y); const f = l.el_.querySelector(`.vjs-thumb-image`); f !== null && f.parentNode.removeChild(f); const b = l.el_.querySelector(`.vjs-thumbnail-holder`); b !== null && b.parentNode.removeChild(b), (i = document.createElement(`div`)).className = `vjs-thumbnail-holder`, tooltip = document.createElement(`div`), tooltip.className = `vjs-thumb-tooltip`, o = document.createElement(`img`), i.appendChild(o), o.className = `vjs-thumb-image`, i.appendChild(tooltip), m.el().appendChild(i), n = l.duration(), l.on(`durationchange`, (t) => { n = l.duration(); }), l.on(`loadedmetadata`, (t) => { n = l.duration(); }); const x = this.el_.querySelector(`.vjs-play-progress`).querySelector(`.vjs-time-tooltip`); videojs.dom.addClass(x, `vjs-abs-hidden`); const j = m.el().querySelector(`.vjs-mouse-display`); j.style.opacity = 0, d = function (t) { const e = this.el_.querySelector(`.vjs-mouse-display`); let r = Number(e.style.left.replace(/px$/, ``)); const d = r / m.el().offsetWidth * n; const h = j.querySelector(`.vjs-time-tooltip`); tooltip.innerHTML = h.innerHTML; const c = v && v.cues.length; u = 0; for (var p = !1; u < c;) { const y = v.cues[u]; if (y.startTime <= d && y.endTime >= d) { p = !0, vtt = s(y.text); break; }u++; } if (p != 1) return tooltip.style.opacity = 0, void (i.className = `vjs-thumbnail-holder vjs-thumb-hidden`); i.className = `vjs-thumbnail-holder`, tooltip.style.opacity = 1, vtt.src && o.src != vtt.src && (o.src = vtt.src), vtt.w === 0 && (vtt.w = a.width, o.style.width = `${vtt.w}px`), vtt.h === 0 && (vtt.h = a.height, o.style.height = `${vtt.h}px`), i.style.width == vtt.w && i.style.height == vtt.h || (i.style.width = `${vtt.w}px`, i.style.height = `${vtt.h}px`), o.style.left = `${-vtt.x}px`, o.style.top = `${-vtt.y}px`, o.style.clip = `rect(${vtt.y}px,${vtt.w + vtt.x}px,${vtt.y + vtt.h}px,${vtt.x}px)`; const f = vtt.w; const b = f / 2; const x = m.el().offsetWidth; const g = l.el_.querySelector(`.vjs-progress-holder`).offsetLeft; const w = b - g; r + b + g > x ? r = x - f : r < w ? r = 0 : r -= w, i.style.left = `${r}px`; }, m.on(`mousemove`, d), h = function (t) { i.style.left = `-1000px`; }, m.on(`mouseleave`, h), l.on(`userinactive`, h); } else i && videojs.dom.addClass(`div`, `vjs-hidden`); } else i && videojs.dom.addClass(`div`, `vjs-hidden`); }); }); }());
