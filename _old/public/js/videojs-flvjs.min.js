!(function e (t, r, o) { function n (l, f) { if (!r[l]) { if (!t[l]) { const u = typeof require === `function` && require; if (!f && u) return u(l, !0); if (i) return i(l, !0); const a = new Error(`Cannot find module '${l}'`); throw a.code = `MODULE_NOT_FOUND`, a; } const c = r[l] = { exports: {} }; t[l][0].call(c.exports, (e) => { const r = t[l][1][e]; return n(r || e); }, c, c.exports, e, t, r, o); } return r[l].exports; } for (var i = typeof require === `function` && require, l = 0; l < o.length; l++)n(o[l]); return n; }({ 1: [function (e, t, r) { (function (e) { "use strict"; function t (e, t) { if (!(e instanceof t)) throw new TypeError(`Cannot call a class as a function`); } function o (e, t) { if (!e) throw new ReferenceError(`this hasn't been initialised - super() hasn't been called`); return !t || typeof t !== `object` && typeof t !== `function` ? e : t; } function n (e, t) { if (typeof t !== `function` && t !== null) throw new TypeError(`Super expression must either be null or a function, not ${typeof t}`); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t); }Object.defineProperty(r, `__esModule`, { value: !0 }); const i = (function () { function e (e, t) { for (let r = 0; r < t.length; r++) { const o = t[r]; o.enumerable = o.enumerable || !1, o.configurable = !0, `value` in o && (o.writable = !0), Object.defineProperty(e, o.key, o); } } return function (t, r, o) { return r && e(t.prototype, r), o && e(t, o), t; }; }()); const l = function e (t, r, o) { t === null && (t = Function.prototype); const n = Object.getOwnPropertyDescriptor(t, r); if (void 0 === n) { const i = Object.getPrototypeOf(t); return i === null ? void 0 : e(i, r, o); } if (`value` in n) return n.value; const l = n.get; if (void 0 !== l) return l.call(o); }; const f = typeof window !== `undefined` ? window.videojs : void 0 !== e ? e.videojs : null; const u = (function (e) { return e && e.__esModule ? e : { default: e }; }(f)); const a = u.default.getTech(`Html5`); const c = u.default.mergeOptions || u.default.util.mergeOptions; const s = { mediaDataSource: {}, config: {} }; const p = (function (e) { function r (e, n) { return t(this, r), e = c(s, e), o(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this, e, n)); } return n(r, e), i(r, [{ key: `setSrc`, value: function (e) { this.flvPlayer && (this.flvPlayer.detachMediaElement(), this.flvPlayer.destroy()); const t = this.options_.mediaDataSource; const r = this.options_.config; t.type = void 0 === t.type ? `flv` : t.type, t.url = e, this.flvPlayer = window.flvjs.createPlayer(t, r), this.flvPlayer.attachMediaElement(this.el_), this.flvPlayer.load(); } }, { key: `dispose`, value: function () { this.flvPlayer && (this.flvPlayer.detachMediaElement(), this.flvPlayer.destroy()), l(r.prototype.__proto__ || Object.getPrototypeOf(r.prototype), `dispose`, this).call(this); } }]), r; }(a)); p.isSupported = function () { return window.flvjs && window.flvjs.isSupported(); }, p.formats = { "video/flv": `FLV`, "video/x-flv": `FLV` }, p.canPlayType = function (e) { return p.isSupported() && e in p.formats ? `maybe` : ``; }, p.canPlaySource = function (e, t) { return p.canPlayType(e.type); }, p.VERSION = `0.2.0`, u.default.registerTech(`Flvjs`, p), r.default = p; }).call(this, typeof global !== `undefined` ? global : typeof self !== `undefined` ? self : typeof window !== `undefined` ? window : {}); }, {}] }, {}, [1]));
