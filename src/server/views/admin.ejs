<%- include('./partials/header'); %>
    <link rel="stylesheet" href="/assets/css/selectize.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/js/standalone/selectize.min.js"></script>

    <style>
        .wrapper {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
            grid-auto-rows: minmax(100px, auto);
        }
        
        .one {
            grid-column: 1 / 3;
            grid-row: 1;
        }
        
        .two {
            grid-column: 2 / 4;
            grid-row: 1 / 3;
        }
        
        .three {
            grid-column: 1;
            grid-row: 2 / 5;
        }
        
        .four {
            grid-column: 3;
            grid-row: 3;
        }
        
        .five {
            grid-column: 2;
            grid-row: 4;
        }
        
        .six {
            grid-column: 3;
            grid-row: 4;
        }
    </style>
    <br>
    <br>
    <h1 class="text-light text-center">Admin Panel</h1>
    <br>
    <br>
    <div class="user-list">
        <select name="user-dropdown" id="user-dropdown" onchange="selectUser()">
		<option value="" selected>Please select a User</option>
	</select>
    </div>
    <br>
    <div class="wrapper">
        <div id="ban-etc-buttons" style="visibility: hidden; background-color: #b1cbe6;" class="one card card-body col-md-6 m-auto">
            <h2 class="text-center">Actions</h2>
            <br>
            <h4>User is currently:</h4>
            <h4 id="banunbantext" style="color:green">Not Banned</h4>
            <br>
            <button type="button" class="btn btn-success" onclick="unbanUserAcc()">Unban User Account</button>
            <br>
            <button type="button" class="btn btn-danger" onclick="banUserAcc()">Ban User Account</button>
            <br>
            <button type="button" class="btn btn-danger" onclick="deleteUserAcc()">Delete User Account</button>
        </div>

        <div id="user-data" style="visibility: hidden; background-color: #b1cbe6;" class="two card card-body col-md-6 m-auto">
            <p id="selectedusertext" class="text-light">Selected User: </p>
            <p id="userdatatext" class="text-light"></p>
            <br>
        </div>

    </div>

    <script>
        const webhookURL =
            "https://discord.com/api/webhooks/854405974097920040/vVfV1GzYnt7M5fUcnQWap3hbuCLNBYioDX4DBU-tfGC9J4OKOOk3hS2K7szgYGexG3Q7";
        const allUsersArr = [];

        // Fetch all of the users.
        fetch(`/api/fetch-users-no-staff`).then(data => data.json()).then(users => {
            const allUsers = users;
            const userDropdown = document.querySelector(`#user-dropdown`);


            allUsers.forEach((user, index) => {
                const optionElement = document.createElement(`option`);

                optionElement.value = index;
                optionElement.textContent = user.name;

                userDropdown.appendChild(optionElement);
                allUsersArr.push(user);
            });

            $(`#user-dropdown`).selectize({
                sortField: `text`
            });
        });

        const selectUser = async() => {
            const userdataDiv = document.querySelector(`#user-data`);
            const buttonsDiv = document.querySelector(`#ban-etc-buttons`);
            const e = document.querySelector(`#user-dropdown`);
            const banunbantext = document.querySelector(`#banunbantext`);

            const selectedUser = e.options[e.selectedIndex].text;

            if (selectedUser === `Please Select a user`) return userdataDiv.style.visibility = `hidden`;
            if (!selectedUser) return userdataDiv.style.visibility = `hidden`;
            userdataDiv.style.visibility = `visible`;
            buttonsDiv.style.visibility = `visible`;

            const DisplayText = document.querySelector(`#selectedusertext`);
            DisplayText.innerHTML = `Selected User: ${selectedUser}`;

            const userDataDisplayText = document.querySelector(`#userdatatext`);

            const trueUserData = await getData(selectedUser)

            let textToInsert = ``;
            for (const prop in trueUserData) {
                if (typeof trueUserData[prop] === `object`) {
                    let stringText = ``;
                    const nestedObj = trueUserData[prop];
                    for (const property2 in nestedObj) {
                        const extraObjectToAppend =
                            `${prop}.${property2.toString()}: <b>${nestedObj[property2].toString()}</b><br>`;
                        stringText = stringText.concat(extraObjectToAppend);
                    }
                    textToInsert = textToInsert.concat(stringText);
                } else {
                    const stringText = `${prop.toString()}: <b>${trueUserData[prop].toString()}</b><br>`;
                    textToInsert = textToInsert.concat(stringText);
                }
            }

            userDataDisplayText.innerHTML = textToInsert;

            if (trueUserData.isBanned) {
                banunbantext.style.color = "red";
                banunbantext.innerHTML = "Banned";
            }

            // `Username: <b>${trueUserData.name}</b><br>Email: <b>${trueUserData.email}</b><br> Banned: <b>${trueUserData.isBanned}</b><br>IPs: <b>${trueUserData.creationIP}, ${trueUserData.lastIP}</b><br>`
        };

        const deleteUserAcc = async() => {
            const userdataDiv = document.querySelector(`#user-data`);
            const e = document.querySelector(`#user-dropdown`);
            const selectedUser = e.options[e.selectedIndex].text;

            let conformation = confirm(
                `Are you sure you want to delete the account of ${selectedUser}? You will NOT be able to undo this action!`
            );
            if (conformation == false) {
                return;
            } else {
                await fetch(`/api/delete-account/${selectedUser}`)
                alert("Deleted user account!")

                let modName = (await fetch('/api/whoAmI').then(resp => {
                    return resp.json()
                })).accessingUsername;
                let textContent =
                    `⛔ **Deleted** ThrowdownTV User via Admin Panel\nUsername: **${selectedUser}**\nModerator: **${modName}**\n -`;
                var params = {
                    content: textContent
                };
                await fetch(webhookURL, {
                    method: "POST",
                    headers: {
                        'Content-type': 'application/json'
                    },
                    body: JSON.stringify(params)
                }).then(okay => {
                    window.location.reload(true);
                })

                window.location.reload(true);
            }
        }

        const banUserAcc = async() => {
            const userdataDiv = document.querySelector(`#user-data`);
            const e = document.querySelector(`#user-dropdown`);
            const selectedUser = e.options[e.selectedIndex].text;

            const trueUserData = await getData(selectedUser)
            if (trueUserData.isBanned) return alert("User is already banned!");
            let conformation = confirm(
                `Are you sure you want to ban the account of ${selectedUser}?`
            );
            if (conformation == false) {
                return;
            } else {
                let banReason = window.prompt("What is the ban reason for this user?");
                let modName = (await fetch('/api/whoAmI').then(resp => {
                    return resp.json()
                })).accessingUsername;

                let ttData = await fetch(`/api/banuser/${selectedUser}`).then(data => data.json()).then(data => {
                    return data;
                });

                let textContent =
                    `⛔ **Banned** ThrowdownTV User via Admin Panel\nUsername: **${selectedUser}**\nModerator: **${modName}**\nReason: ${banReason}\n -`;
                var params = {
                    content: textContent
                };
                await fetch(webhookURL, {
                    method: "POST",
                    headers: {
                        'Content-type': 'application/json'
                    },
                    body: JSON.stringify(params)
                }).then(okay => {
                    window.location.reload(true);
                })
                window.location.reload(true);
            }
        }

        const unbanUserAcc = async() => {
            const userdataDiv = document.querySelector(`#user-data`);
            const e = document.querySelector(`#user-dropdown`);
            const selectedUser = e.options[e.selectedIndex].text;

            const trueUserData = await getData(selectedUser)
            if (!trueUserData.isBanned) return alert("User is not banned!");
            let conformation = confirm(
                `Are you sure you want to unban the account of ${selectedUser}?`
            );
            if (conformation == false) {
                return;
            } else {
                let modName = (await fetch('/api/whoAmI').then(resp => {
                    return resp.json()
                })).accessingUsername;

                let ttData = await fetch(`/api/unbanuser/${selectedUser}`).then(data => data.json()).then(data => {
                    return data;
                });

                let textContent =
                    `✅ **Unbanned** ThrowdownTV User via Admin Panel\nUsername: **${selectedUser}**\nModerator: **${modName}**\n -`;
                var params = {
                    content: textContent
                };
                await fetch(webhookURL, {
                    method: "POST",
                    headers: {
                        'Content-type': 'application/json'
                    },
                    body: JSON.stringify(params)
                }).then(okay => {
                    window.location.reload(true);
                })
                window.location.reload(true);
            }
        }

        const getData = async(username) => {
            let userData;
            let ttData = await fetch(`/api/fetch-user/${username}`).then(data => data.json()).then(data => {
                return data;
            })
            return ttData;
        };
    </script>