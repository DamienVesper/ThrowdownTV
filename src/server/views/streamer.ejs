<%- include('./partials/header'); %>

<link rel="stylesheet" href="https://vjs.zencdn.net/7.10.2/video-js.css">
<link rel="stylesheet" href="/assets/js/videojs/videojs-resolution-switcher.css">
<link rel="stylesheet" href="/assets/css/streamer.css">

<script src="https://cdnjs.cloudflare.com/ajax/libs/flv.js/1.5.0/flv.min.js"></script>
<script src="https://vjs.zencdn.net/7.10.2/video.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/videojs-flvjs@0.2.0/dist/videojs-flvjs.min.js"></script>
<script src="/assets/js/videojs/videojs-resolution-switcher.js"></script>
<script type="application/javascript" src="/assets/js/tooltipjs/tooltip.js"></script>

<div id="streamer-error" class="alert alert-danger alert-dismissible fade show" role="alert">
    <span id="streamer-error-message"></span>
</div>
<div id="streamer-success" class="alert alert-success alert-dismissible fade show" role="alert">
    <span id="streamer-success-message"></span>
</div>
<div class="stream-overlay">
    <div class="stream-popout">
        <video id="live-stream" class="video-js vjs-16-9 vjs-big-play-centered" controls preload="auto" autoplay="true"
            fluid="true" width="1280" height="720" poster="/assets/img/thumbnail.png">
            <p class="vjs-no-js">
                To view this video please enable JavaScript, and consider upgrading to a
                web browser that
                <a href="https://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
            </p>
        </video>
		<div class="streamer-buttons">
			<div>
				<span class="live-status" id="livestatus">POLLING...</span>
				<span class="viewers text-danger" title="Live Viewers">
					<i class="streamer-icon icofont icofont-eye-alt"></i>
					<span id="viewer-count">0</span>
				</span>
				<span class="followers text-primary" title="Followers">
					<i class="streamer-icon icofont icofont-people"></i>
					<span id="follow-count">0</span>
				</span>
				<div class="interaction-btns">
					<button id="follow-btn" type="submit" class="btn btn-sm btn-primary">Follow</button>
					<button id="donate-btn" type="submit" class="btn btn-sm btn-success">Donate</button>
					<button id="report-btn" type="submit" class="btn btn-sm btn-danger"><i class="icofont icofont-flag" title="Report"></i></button>
				</div>
			</div>
		</div>
        <div class="info-box">
            <div class="profile-picture"><img src="/assets/img/defaultpfp.png" id="avatar" class="circle-crop" alt="Avatar"></div>
            <div class="streamer-content mb-3">
				<span id="stream-title" class="lead"></span>
                <!-- <span id="stream-title" class="lead" title="Title" data-tooltip="{ 'offset': 10, 'class': 'title-tooltip' }"></span>
				<script type="application/javascript">tooltip.setOptions({tooltipId: "title-tooltip", offsetDefault: 20});</script> -->
                <br>
				<div class="streamer-name">
                	<img src="/assets/img/chat/badges/staff.png" id="staffbadge" width="15" height="15" alt="[Throwdown Staff]" visible="false" title="ThrowdownTV Staff">
                	<img src="/assets/img/chat/badges/vip.png" id="vipbadge" width="15" height="15" alt="[VIP]" title="ThrowdownTV VIP Member">
               		<span id="stream-display-name" class="lead"></span>
				</div>
            </div>
        </div>
		<div id="stream-description"></div>
    </div>
    <iframe class="chat-popout" frameborder="0" height="720px"></iframe>
</div>
<script>
    const streamer = window.location.pathname.split(`/`)[1].toLowerCase();

    $(document).ready(() => {
        // Player
        let player = videojs(`live-stream`, {
            controls: true,
            autoplay: true,
            preload: `auto`,
            errorDisplay: false,
            flvjs: {
                mediaDataSource: {
                    isLive: true,
                    cors: true,
                    withCredentials: false
                }
            },
            plugins: {
                videoJsResolutionSwitcher: {
                    default: `high`,
                    dynamicLabel: true
                }
            }
        });

        let live = false;

        // Intially Hide Badges
        $(`#staffbadge`).hide();
        $(`#vipbadge`).hide();

        $(`#follow-btn-form`).attr(`action`, `/follow/${streamer}`);
        $(`#report-btn`).attr(`href`, `/report/${streamer}`);
        $(`#streamer-error`).hide();
        $(`#streamer-success`).hide();

        fetch(`/authenticated`).then(data => data.json()).then(userdata => {
            const username = userdata.username;

            $(`.chat-popout`).attr(`src`, `/chat/${streamer}`);

            $(`#follow-btn-form`).attr(`action`, `/follow/${streamer}`);
            $(`#follow-btn`).attr(`title`, `Follow ${streamer}`);
            $(`#donate-btn`).attr(`title`, `Donate to ${streamer}`);
            $(`#report-btn`).attr(`title`, `Report ${streamer} for a TOS violation`);

            const getStreamData = () => {
                fetch(`/api/public-stream-data/${streamer}`).then(data => data.json()).then(data => {
                    $(`#stream-display-name`).text(data.displayName);
                    $(`#stream-title`).text(data.streamTitle);
					//$(`#stream-title`).attr(`title`, `${data.streamTitle}`);
					//$(`#title-tooltip`).text(`${data.streamTitle}`); //Tooltip
                    $(`#stream-description`).html(data.streamDescription);
                    $(`#donation-btn`).attr(`action`, `${data.donationLink}`);
                    $.get(data.avatarURL).then(successCallback, errorCallback);
                    $(`#follow-count`).text(data.followers.length);

                    function successCallback(response) {
                        $(`#avatar`).attr(`src`, `${data.avatarURL}`);
                    }

                    function errorCallback(error) {
                        $(`#avatar`).attr(`src`, `/assets/img/defaultpfp.png`);
                    }
                    
                    // Check to see if the user is a VIP or a staff member
                    let streamerVIP = data.isVip;
                    let streamerStaff = data.isStaff;
                    if(streamerVIP) {
                        $(`#vipbadge`).show();
                    }
                    if(streamerStaff) {
                        $(`#staffbadge`).show();
                        $(`#vipbadge`).hide();
                    }
                    
                    if (streamer === userdata.username) {
                        $(`#follow-btn`).attr(`disabled`, true);
                        $(`#donate-btn`).attr(`disabled`, true);
                        $(`#report-btn`).attr(`disabled`, true);

                        $(`#follow-btn`).attr(`title`, `You cannot follow yourself.`);
                        $(`#donate-btn`).attr(`title`, `You cannot donate to yourself.`);
                        $(`#report-btn`).attr(`title`, `You cannot report yourself.`);
                    }
                    if (data.followers.includes(userdata.username)) {
                        $(`#follow-btn`).html(`Unfollow`);
                        $(`#follow-btn`).attr(`action`, `/unfollow/${streamer}`);
                        $(`#follow-btn`).attr(`title`, `Unfollow ${streamer}`);
                    }
                    $(`#donate-btn`).on(`click`, e => {
                        window.open(data.donationLink);
                    });
					$(`#report-btn`).on(`click`, e => {
                        window.open(`/report/${streamer}`);
                    });
                });

            }

            const checkCrucialData = () => {
                fetch(`/api/public-stream-data/${streamer}`).then(data => data.json()).then(data => {
                    fetch(`https://${data.rtmpServer}.throwdown.tv/api/${streamer}`).then(data => data.json()).then(viewerdata => {
                        $(`#viewer-count`).text(viewerdata.viewers);
                    })
                    fetch(`https://us01.throwdown.tv/api/${streamer}`).then(livedata => livedata.json()).then(livedata => {
                        if (data.isSuspended) return window.location.reload();
                        if (livedata.isLive === true) {
                            $(`#livestatus`).text(`LIVE`);
                            $(`#livestatus`).removeClass(`offline`).addClass(`online`);
                            if (live === false) {
                                player.updateSrc([
                                    {
                                        src: `https://${data.rtmpServer}.throwdown.tv/stream_source/${streamer}`,
                                        type: `video/x-flv`,
                                        label: `SOURCE`
                                    },
                                    {
                                        src: `https://${data.rtmpServer}.throwdown.tv/stream_1080/${streamer}`,
                                        type: `video/x-flv`,
                                        label: `1080P`
                                    },
                                    {
                                        src: `https://${data.rtmpServer}.throwdown.tv/stream_720/${streamer}`,
                                        type: `video/x-flv`,
                                        label: `720P`
                                    },
                                    {
                                        src: `https://${data.rtmpServer}.throwdown.tv/stream_480/${streamer}`,
                                        type: `video/x-flv`,
                                        label: `480P`
                                    },
                                    {
                                        src: `https://${data.rtmpServer}.throwdown.tv/stream_360/${streamer}`,
                                        type: `video/x-flv`,
                                        label: `360P`
                                    }
                                ])
                                player.on(`resolutionchange`, function(){
                                    console.info(`Changed Resolution`)
                                })
                            }
                            live = true;
                        } else {
                            $(`#livestatus`).text(`OFFLINE`);
                            $(`#livestatus`).removeClass(`online`).addClass(`offline`);
                            if (live === true) {
                                player.src({
                                    src: `/assets/video/throwdown.mp4`,
                                    type: `video/mp4`
                                });
                            }
                            live = false;
                        }
                    });
                });
            }

            player.controlBar.progressControl.seekBar.hide();

            setInterval(getStreamData, 5e3);
            setInterval(checkCrucialData, 5000);
            checkCrucialData();
            getStreamData();

            $(`#follow-btn`).on(`click`, e => {
                let postUrl = `/follow/${streamer}`;

                if ($(`#follow-btn`).html() === `Unfollow`) {
                    postUrl = `/unfollow/${streamer}`;
                    $(`#follow-btn-form`).attr(`action`, `/unfollow/${streamer}`);
                }

                $.ajax({
                    type: `post`,
                    url: `${postUrl}`,
                    data: $(`#follow-btn`).serialize()
                }).then(res => {
                    if (res.errors) {
                        $(`#streamer-error`).show();
                        $(`#streamer-error-message`).text(res.errors);
                    } else if (res.success) {
                        $(`#streamer-success`).show();
                        $(`#streamer-success-message`).text(res.success);
                        fetch(`/api/public-stream-data/${streamer}`).then(data => data.json()).then(data => {
                            if (data.followers.includes(userdata.username)) {
                                $(`#follow-btn`).html(`Unfollow`);
                                $(`#follow-btn`).attr(`action`, `/unfollow/${streamer}`);
                                $(`#follow-btn`).attr(`title`, `Unfollow ${streamer}`);
                            } else {
                                $(`#follow-btn`).html(`Follow`);
                                $(`#follow-btn`).attr(`action`, `/follow/${streamer}`);
                                $(`#follow-btn`).attr(`title`, `Follow ${streamer}`);
                            }
                        })
                    }
                    setTimeout(function(){ $(`#streamer-success`).hide(); }, 2000);
                });
            });

            player.on(`error`, event => {
                player.src({
                    src: `/assets/video/throwdown.mp4`,
                    type: `video/mp4`
                });
            });
        });
    });
</script>